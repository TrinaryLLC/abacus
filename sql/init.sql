SET timezone='UTC';

CREATE TABLE mic AS SELECT * FROM read_csv_auto('/home/aaron/Mystuff/python/abacus_v/data/mic/ISO10383_MIC.csv');
-----------------------------------------------------------------------------------------------------------------
-- #TYPE
CREATE SEQUENCE seq_types START 1000000;

-- #INSTRUMENT
CREATE SEQUENCE seq_instrument START 2000000;

-- #METHODOLOGY
CREATE SEQUENCE seq_methodology START 3000000;

-- #STRATEGY
CREATE SEQUENCE seq_strategy START 4000000;

-----------------------------------------------------------------------------------------------------------------
-- #METHODOLOGY #TYPE
CREATE TABLE methodology_types (
    ID INTEGER PRIMARY KEY DEFAULT nextval('seq_types'),
    NAME VARCHAR(255) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(255),
    
    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255) DEFAULT 'System',
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',
);

-- Where one would register a methodology (function) for use in a strategy
-- #METHODOLOGY
CREATE TABLE methodologies (
    ID INTEGER PRIMARY KEY DEFAULT nextval('seq_methodology'),
    TYPE INTEGER NOT NULL,
    FOREIGN KEY (TYPE) REFERENCES methodology_types(ID),
    FUNCTION_REPO VARCHAR(255),
    FUNCTION_BRANCH VARCHAR(255),
    FUNCTION_FILE VARCHAR(255),
    FUNCTION_NAME VARCHAR(255),
    FUNCTION_DESCRIPTION VARCHAR(255),

    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255),
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',   
    
    UNIQUE(TYPE, FUNCTION_REPO, FUNCTION_BRANCH, FUNCTION_FILE, FUNCTION_NAME)
);

-- #STRATEGY
CREATE TABLE strategies (
    ID INTEGER PRIMARY KEY DEFAULT nextval('seq_strategy'),

    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255),
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',
);

-- #STRATEGY #IDENTIFIER #TYPE
CREATE TABLE strategy_identifier_types (
    ID INTEGER PRIMARY KEY DEFAULT nextval('seq_types'),
    NAME VARCHAR(255) UNIQUE NOT NULL,
    DESCRIPTION VARCHAR(255),
    
    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255) DEFAULT 'System',
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',
);

-- #STRATEGY #IDENTIFIER
CREATE TABLE strategy_identifier (
    ID INTEGER PRIMARY KEY DEFAULT nextval('seq_strategy'),
    TYPE_ID INTEGER NOT NULL,
    FOREIGN KEY (TYPE_ID) REFERENCES strategy_identifier_types(ID),
    VALUE VARCHAR(255) NOT NULL,
   
    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255) DEFAULT 'System',
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',   
     UNIQUE (TYPE_ID, VALUE) 
);

-- #STRATEGY #IDENTIFIER #RELATIONSHIP
CREATE TABLE strategy_identifier_relationship (
    STRATEGY_ID INTEGER NOT NULL,
    FOREIGN KEY (STRATEGY_ID) REFERENCES strategies(ID),
    STRATEGY_IDENTIFIER_ID INTEGER NOT NULL,    
    FOREIGN KEY (STRATEGY_IDENTIFIER_ID) REFERENCES strategy_identifier(ID),
    TYPE VARCHAR(255) DEFAULT 'REFERENCES',    
    
    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255) DEFAULT 'System',
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',  

    -- Only one classification per instrument per classification type per valid from date
    UNIQUE (STRATEGY_ID, STRATEGY_IDENTIFIER_ID, VALID_FROM)
);

-- #INSTRUMENT #TYPE
CREATE TABLE instrument_types (
    ID INTEGER PRIMARY KEY DEFAULT nextval('seq_types'),
    NAME VARCHAR(255),
    DESCRIPTION VARCHAR(255),
    
    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255) DEFAULT 'System',
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',
);

-- #INSTRUMENT
CREATE TABLE instruments (
    ID INTEGER PRIMARY KEY DEFAULT nextval('seq_instrument');
    TYPE_ID INTEGER NOT NULL,
    FOREIGN KEY (TYPE_ID) REFERENCES instrument_types(ID),
    
    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255) DEFAULT 'System',
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',
);


-- #INSTRUMENT #IDENTIFIER #RELATIONSHIP
CREATE TABLE instrument_identifier_relationship (
    INSTRUMENT_ID INTEGER NOT NULL,
    FOREIGN KEY (INSTRUMENT_ID) REFERENCES instruments(ID),
    INSTRUMENT_IDENTIFIER_ID INTEGER NOT NULL,    
    FOREIGN KEY (INSTRUMENT_IDENTIFIER_ID) REFERENCES instrument_identifier(ID),
    TYPE VARCHAR(255) DEFAULT 'REFERENCES',    
    UNIQUE (INSTRUMENT_ID, INSTRUMENT_IDENTIFIER_ID, VALID_FROM),    

    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255) DEFAULT 'System',
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',
);

-- #INSTRUMENT #IDENTIFIER #TYPE
CREATE TABLE instrument_identifier_types (
    ID INTEGER PRIMARY KEY DEFAULT nextval('seq_types'),
    NAME VARCHAR(255) PRIMARY KEY,
    DESCRIPTION VARCHAR(255),
    
    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255) DEFAULT 'System',
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',
);

-- #INSTRUMENT #IDENTIFIER
CREATE SEQUENCE seq_instrumentid START 8000000;
CREATE TABLE instrument_identifier (
    ID INTEGER PRIMARY KEY DEFAULT nextval('seq_instrumentid');
    
    FOREIGN KEY (TYPE_ID) REFERENCES instrument_identifier_types(NAME),
    VALUE VARCHAR(255) NOT NULL,
    UNIQUE (TYPE, VALUE)

    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255) DEFAULT 'System',
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',    
);

-- #INSTRUMENT #MARKET #RELATIONSHIP
CREATE TABLE instrument_market_relationship (
    TYPE VARCHAR(255) DEFAULT 'REFERENCES',
    
    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255) DEFAULT 'System',
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',    
);

-- #INSTRUMENT #CLASSIFICATION #TYPE
CREATE TABLE instrument_classification_types (
    ID INTEGER PRIMARY KEY DEFAULT nextval('seq_types'),
    NAME VARCHAR(255) UNIQUE;
    DESCRIPTION VARCHAR(255),
    
    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255) DEFAULT 'System',
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',  
);

-- #INSTRUMENT #CLASSIFICATION
CREATE TABLE instrument_classifications(
    INSTRUMENT_CLASSIFICATION_TYPE_ID INTEGER NOT NULL,
    FOREIGN KEY (INSTRUMENT_CLASSIFICATION_TYPE_ID) REFERENCES instrument_classification_types(ID),
    VALUE = VARCHAR(255) NOT NULL,
    
    VALID_FROM DATE DEFAULT CURRENT_DATE,
    VALID_TO DATE DEFAULT '3000-12-31',
    UPDATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    UPDATED_BY VARCHAR(255) DEFAULT 'System',
    CREATED TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    CREATED_BY VARCHAR(255) DEFAULT 'System',  

    -- Only one classification per instrument per classification type per valid from date
    UNIQUE (INSTRUMENT_ID, INSTRUMENT_CLASSIFICATION_TYPE_ID, VALID_FROM)
);

-- #INSTRUMENT #CLASSIFICATION #RELATIONSNHIP
CREATE TABLE instrument_classification_relationship (
    INSTRUMENT_ID INTEGER NOT NULL UNIQUE,
    FOREIGN KEY (INSTRUMENT_ID) REFERENCES instruments(ID),
    CLASSIFICATION_ID INTEGER NOT NULL UNIQUE
)

CREATE TABLE strategy_methodology_relationship (
    
)

CREATE VIEW view_instrument_identifiers AS (
SELECT s.ID, sid.NAME, si.VALUE
FROM strategies s
JOIN strategy_identifier_relationship sr ON s.ID=sr.STRATEGY_ID
JOIN strategy_identifier si ON sr.STRATEGY_IDENTIFIER_ID=si.ID 
JOIN strategy_identifier_types sid on si.TYPE_ID=sid.ID
WHERE s.VALID_FROM<=current_date() AND s.VALID_TO>=current_date()
AND sr.VALID_FROM<=current_date() AND sr.VALID_TO>=current_date()
AND si.VALID_FROM<=current_date() AND si.VALID_TO>=current_date()
);
